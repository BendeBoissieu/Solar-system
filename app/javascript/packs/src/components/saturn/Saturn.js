/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'

import { COEFFICIENT_SCALE_AFTER_EARTH } from "../../constants/global";

export function Saturn(props) {
  const saturneRef = useRef();

  useEffect(() => {
    const interval = setInterval(() => {
      saturneRef.current.rotation.y = ((saturneRef.current.rotation.y + 29.5* Math.PI /60000)  % (Math.PI * 2))
      saturneRef.current.position.x = 700 * COEFFICIENT_SCALE_AFTER_EARTH * Math.cos(saturneRef.current.rotation.y)
      saturneRef.current.position.z = 700 * COEFFICIENT_SCALE_AFTER_EARTH * Math.sin(saturneRef.current.rotation.y)
    }, 10);
    return () => clearInterval(interval);
  }, []);

  const { nodes, materials } = useGLTF('/gltf/saturne/saturn.gltf')
  return (
    <group onClick={() => props.handleClick("saturn")}
           onPointerOver={() => props.setHovered(true)}
           onPointerOut={() => props.setHovered(false)}
           ref={saturneRef} {...props} dispose={null} position={[700 * COEFFICIENT_SCALE_AFTER_EARTH,0,0]} scale={18}>
      <mesh geometry={nodes.Saturn.geometry} material={materials.Saturn} />
      <mesh geometry={nodes.SaturnRing.geometry} material={materials.SaturnRing} />
    </group>
  )
}

useGLTF.preload('/gltf/saturne/saturn.gltf')
